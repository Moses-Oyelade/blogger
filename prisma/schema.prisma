// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


generator client {
    provider = "prisma-client-js"
    previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
    provider = "postgresql"
    url = env("POSTGRES_PRISMA_URL") 
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

// schema.prisma

model Post {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  title     String
  content   String?
  published Boolean     @default(false)
  author    User?       @relation(fields:   [authorId], references: [id])
  authorId  Int?

}

model Account {
  id                 String  @id @default(cuid())
  userId             Int     @unique
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user               User    @relation(fields:  [userId], references:   [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique@map("session_token")
  expires      DateTime
  user         User     @relation(fields:   [userId], references:   [id], onDelete: Cascade)
  userId       Int      @unique
}


model User {
  id            Int       @id @default(autoincrement())
  name          String
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  posts         Post[]
  accounts      Account[]
  sessions      Session[]
  }

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


